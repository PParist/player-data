/* eslint-disable */
export default async () => {
    const t = {
        ["./users/models/user.model"]: await import("./users/models/user.model")
    };
    return { "@nestjs/swagger/plugin": { "models": [[import("./roles/entities/role.entity"), { "Role": { name: { required: true, type: () => String }, description: { required: true, type: () => String } } }]], "controllers": [[import("./app.controller"), { "AppController": { "getHello": { type: String }, "getHelloName": { type: String } } }]] }, "@nestjs/graphql/plugin": { "models": [[import("./auth/dto/register.input"), { "RegisterInput": { description: { nullable: true }, email: {}, login_token: {}, login_type: {}, device_uuid: { nullable: true }, ip_address: { nullable: true }, role_uuid: { nullable: true }, version: {} } }], [import("./auth/models/token.model"), { "Token": { accessToken: {}, refreshToken: {} } }], [import("./auth/dto/login.input"), { "LoginInput": { uuid: { nullable: true }, email: {}, login_token: {}, login_type: {}, device_uuid: { nullable: true }, ip_address: { nullable: true }, role: { nullable: true }, version: {} } }], [import("./common/models/base.model"), { "BaseModel": { id: {}, uuid: {}, createdAt: {}, createdBy: { nullable: true }, updatedAt: {}, updatedBy: { nullable: true }, deletedAt: { nullable: true }, deletedBy: { nullable: true }, version: {} } }], [import("./users/models/user.model"), { "UserAccount": { email: {}, login_type: {}, role_uuid: { nullable: true } } }], [import("./auth/models/auth.model"), { "Auth": { user: { type: () => t["./users/models/user.model"].UserAccount } } }], [import("./auth/dto/refresh-token.input"), { "RefreshTokenInput": { token: {} } }], [import("./users/dto/update-user.input"), { "UpdateUserInput": { description: { nullable: true }, email: { nullable: true }, roleUuid: { nullable: true } } }], [import("./roles/entities/role.entity"), { "Role": { name: {}, description: {} } }], [import("./common/pagination/pagination.args"), { "PaginationArgs": { skip: { nullable: true, type: () => Number }, after: { nullable: true, type: () => String }, before: { nullable: true, type: () => String }, first: { nullable: true, type: () => Number }, last: { nullable: true, type: () => Number } } }], [import("./posts/args/post-id.args"), { "PostIdArgs": { postId: { type: () => String } } }], [import("./posts/args/user-id.args"), { "UserIdArgs": { userId: { type: () => String } } }], [import("./posts/models/post.model"), { "Post": { title: {}, content: { nullable: true }, published: {}, author: { nullable: true } } }], [import("./common/pagination/page-info.model"), { "PageInfo": { endCursor: { nullable: true }, hasNextPage: {}, hasPreviousPage: {}, startCursor: { nullable: true } } }], [import("./posts/models/post-connection.model"), { "PostConnection": {} }], [import("./posts/dto/post-order.input"), { "PostOrder": { field: {} } }], [import("./posts/dto/createPost.input"), { "CreatePostInput": { content: {}, title: {} } }], [import("./roles/dto/create-role.input"), { "CreateRoleInput": { uuid: {}, name: {}, description: {}, version: {} } }], [import("./roles/dto/update-role.input"), { "UpdateRoleInput": { id: {} } }], [import("./users/dto/change-password.input"), { "ChangePasswordInput": { oldPassword: {}, newPassword: {} } }]] } };
};