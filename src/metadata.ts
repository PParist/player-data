/* eslint-disable */
export default async () => {
    const t = {};
    return { "@nestjs/swagger/plugin": { "models": [[import("./obtain_base/entities/obtain_base.entity"), { "ObtainBase": { obtains_type: { required: false, type: () => String }, types_uuid: { required: false, type: () => String }, info: { required: false, type: () => String } } }], [import("./costome_base/entities/costome_base.entity"), { "CostomeBase": { equimentID: { required: true, type: () => String }, name: { required: true, type: () => String }, info: { required: true, type: () => String }, obtainBaseUuid: { required: false, type: () => String }, imagePath: { required: false, type: () => String }, prefabPath: { required: false, type: () => String }, equipmentType: { required: true, type: () => Number }, model: { required: true, type: () => Number }, tier: { required: true, type: () => Number }, isActive: { required: true, type: () => Number }, isDefault: { required: true, type: () => Number }, isColorable: { required: true, type: () => Number }, colors: { required: false, type: () => String } } }], [import("./player_profiles/entities/player_profile.entity"), { "PlayerProfile": { userAccountUuid: { required: false, type: () => String }, name: { required: true, type: () => String }, description: { required: false, type: () => String }, imageUrl: { required: false, type: () => String }, level: { required: true, type: () => Number }, exp: { required: true, type: () => Number }, currentMana: { required: true, type: () => Number }, maxMana: { required: true, type: () => Number }, zeny: { required: true, type: () => Number }, crystalShard: { required: true, type: () => Number }, goldenPoringCoin: { required: true, type: () => Number }, poringCoin: { required: true, type: () => Number }, gachaponTicket: { required: true, type: () => Number } } }]], "controllers": [[import("./app.controller"), { "AppController": { "getHello": { type: String }, "getHelloName": { type: String } } }]] }, "@nestjs/graphql/plugin": { "models": [[import("./auth/dto/register.input"), { "RegisterInput": { description: { nullable: true }, email: {}, login_token: {}, device_uuid: { nullable: true }, ip_address: { nullable: true }, role_uuid: { nullable: true }, version: {} } }], [import("./auth/models/token.model"), { "Token": { accessToken: {}, refreshToken: {} } }], [import("./auth/dto/login.input"), { "LoginInput": { uuid: { nullable: true }, email: {}, login_token: {}, device_uuid: { nullable: true }, ip_address: { nullable: true }, role: { nullable: true }, version: { nullable: true } } }], [import("./auth/dto/refresh-token.input"), { "RefreshTokenInput": { token: {} } }], [import("./common/pagination/pagination.args"), { "PaginationArgs": { skip: { nullable: true, type: () => Number }, after: { nullable: true, type: () => String }, before: { nullable: true, type: () => String }, first: { nullable: true, type: () => Number }, last: { nullable: true, type: () => Number } } }], [import("./posts/args/post-id.args"), { "PostIdArgs": { postId: { type: () => String } } }], [import("./posts/args/user-id.args"), { "UserIdArgs": { userId: { type: () => String } } }], [import("./common/models/base.model"), { "BaseModel": { id: {}, uuid: {}, createdAt: {}, createdBy: { nullable: true }, updatedAt: { nullable: true }, updatedBy: { nullable: true }, deletedAt: { nullable: true }, deletedBy: { nullable: true }, version: { nullable: true } } }], [import("./posts/models/post.model"), { "Post": { title: {}, content: { nullable: true }, published: {} } }], [import("./common/pagination/page-info.model"), { "PageInfo": { endCursor: { nullable: true }, hasNextPage: {}, hasPreviousPage: {}, startCursor: { nullable: true } } }], [import("./posts/models/post-connection.model"), { "PostConnection": {} }], [import("./posts/dto/post-order.input"), { "PostOrder": { field: {} } }], [import("./posts/dto/createPost.input"), { "CreatePostInput": { content: {}, title: {} } }], [import("./obtain_base/dto/create-obtain_base.input"), { "CreateObtainBaseInput": { obtains_type: { nullable: true }, types_uuid: { nullable: true }, info: { nullable: true } } }], [import("./obtain_base/dto/update-obtain_base.input"), { "UpdateObtainBaseInput": { uuid: {} } }], [import("./obtain_base/entities/obtain_base.entity"), { "ObtainBase": { obtains_type: { nullable: true }, types_uuid: { nullable: true }, info: { nullable: true } } }], [import("./costome_base/dto/create-costome_base.input"), { "CreateCostomeBaseInput": { equimentID: {}, name: {}, info: {}, obtainBaseUuid: { nullable: true }, imagePath: { nullable: true }, prefabPath: { nullable: true }, equipmentType: {}, model: {}, tier: {}, isActive: {}, isDefault: {}, isColorable: {}, colors: { nullable: true } } }], [import("./costome_base/dto/update-costome_base.input"), { "UpdateCostomeBaseInput": { uuid: {} } }], [import("./costome_base/entities/costome_base.entity"), { "CostomeBase": { equimentID: {}, name: {}, info: {}, obtainBaseUuid: { nullable: true }, imagePath: { nullable: true }, prefabPath: { nullable: true }, equipmentType: {}, model: {}, tier: {}, isActive: {}, isDefault: {}, isColorable: {}, colors: { nullable: true } } }], [import("./player_profiles/dto/create-player_profile.input"), { "CreatePlayerProfileInput": { userAccountUuid: { nullable: true }, name: {}, description: { nullable: true }, imageUrl: { nullable: true }, level: {}, exp: {}, currentMana: {}, maxMana: {}, zeny: {}, crystalShard: {}, goldenPoringCoin: {}, poringCoin: {}, gachaponTicket: {} } }], [import("./player_profiles/dto/update-player_profile.input"), { "UpdatePlayerProfileInput": { uuid: {} } }], [import("./player_profiles/entities/player_profile.entity"), { "PlayerProfile": { userAccountUuid: { nullable: true }, name: {}, description: { nullable: true }, imageUrl: { nullable: true }, level: {}, exp: {}, currentMana: {}, maxMana: {}, zeny: {}, crystalShard: {}, goldenPoringCoin: {}, poringCoin: {}, gachaponTicket: {} } }]] } };
};