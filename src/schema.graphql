# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Announcement {
  createdAt: Date
  createdBy: String
  deletedAt: Date
  deletedBy: String
  id: ID!

  """URL to image avatar"""
  image: String!

  """info"""
  info: String!
  updatedAt: Date
  updatedBy: String
  uuid: String!
  version: Int
}

type AvatarBase {
  createdAt: Date
  createdBy: String
  deletedAt: Date
  deletedBy: String
  id: ID!

  """Image"""
  imageUrl: String!

  """Obtain Base Uuid"""
  obtainsBaseUuid: String
  updatedAt: Date
  updatedBy: String
  uuid: String!
  version: Int
}

type CostomeBase {
  """Colors"""
  colors: String
  createdAt: Date
  createdBy: String
  deletedAt: Date
  deletedBy: String

  """Equioment Type"""
  equipType: Int!

  """Equipment ID"""
  equipmentId: String!
  id: ID!

  """Image Path"""
  imagePath: String

  """Equipment Info"""
  info: String

  """Is Active"""
  isActive: Int!

  """Is Colorable"""
  isColorable: Int!

  """Is Default"""
  isDefault: Int!

  """Model"""
  model: Int!

  """Equipment Name"""
  name: String

  """Obtain Base Uuid"""
  obtainBaseUuid: String

  """Prefab Path"""
  prefabPath: String

  """Tier"""
  tier: Int!
  updatedAt: Date
  updatedBy: String
  uuid: String!
  version: Int
}

input CreateAnnouncementInput {
  """URL to image avatar"""
  image: String!

  """info"""
  info: String!
}

input CreateAvatarBaseInput {
  """URL to image avatar"""
  imageUrl: String!

  """Obtain Base Uuid"""
  obtainsBaseUuid: String!
}

input CreateCostomeBaseInput {
  """Colors"""
  colors: String

  """Equipment ID"""
  equimentID: String!

  """Equioment Type"""
  equipmentType: Int!

  """Image Path"""
  imagePath: String

  """Equipment Info"""
  info: String

  """Is Active"""
  isActive: Int!

  """Is Colorable"""
  isColorable: Int!

  """Is Default"""
  isDefault: Int!

  """Model"""
  model: Int!

  """Equipment Name"""
  name: String

  """Obtain Base Uuid"""
  obtainBaseUuid: String

  """Prefab Path"""
  prefabPath: String

  """Tier"""
  tier: Int!
}

input CreateFrameBaseInput {
  """URL to image avatar"""
  imageUrl: String!

  """Obtain Base Uuid"""
  obtainsBaseUuid: String!
}

input CreateObtainBaseInput {
  """info"""
  info: String

  """obtains_type"""
  obtains_type: String

  """tpyes_uuid"""
  types_uuid: String
}

input CreatePlayerProfileInput {
  """URL to player profile avatar"""
  avatar_url: String

  """Crystal shard currency"""
  crystalShard: Int!

  """Current mana points"""
  currentMana: Int!

  """Player profile description"""
  description: String

  """Player experience points"""
  exp: Int!

  """URL to player profile frame"""
  frame_url: String

  """Player level"""
  level: Int!

  """Maximum mana points"""
  maxMana: Int!

  """Player profile name"""
  name: String!

  """User account UUID"""
  userAccountUuid: String

  """Player currency (Zeny)"""
  zeny: Int!
}

input CreateTalentBaseInput {
  """detail"""
  detail: String

  """image parth (misspelled path)"""
  imageParth: String

  """is active"""
  isActive: Int!

  """level max"""
  levelMax: Int!

  """name"""
  name: String!

  """skill point"""
  skillPoint: Int!

  """stage"""
  stage: Int!

  """stat"""
  stat: String!

  """type"""
  type: String!

  """zeny spend"""
  zenySpend: Int!
}

"""Date custom scalar type"""
scalar Date

type FrameBase {
  createdAt: Date
  createdBy: String
  deletedAt: Date
  deletedBy: String
  id: ID!

  """Image"""
  imageUrl: String!

  """Obtain Base Uuid"""
  obtainsBaseUuid: String
  updatedAt: Date
  updatedBy: String
  uuid: String!
  version: Int
}

type Mutation {
  createAnnouncement(createAnnouncementInput: CreateAnnouncementInput!): Announcement!
  createAvatarBase(createAvatarBaseInput: CreateAvatarBaseInput!): AvatarBase!
  createCostomeBase(createCostomeBaseInput: CreateCostomeBaseInput!): CostomeBase!
  createFrameBase(createFrameBaseInput: CreateFrameBaseInput!): FrameBase!
  createObtainBase(createObtainBaseInput: CreateObtainBaseInput!): ObtainBase!
  createPlayerProfile(createPlayerProfileInput: CreatePlayerProfileInput!): PlayerProfile!
  createTalentBase(createTalentBaseInput: CreateTalentBaseInput!): TalentBase!
  removeAnnouncement(uuid: String!): Announcement!
  removeAvatarBase(uuid: String!): AvatarBase!
  removeCostomeBase(uuid: String!): CostomeBase!
  removeFrameBase(uuid: String!): FrameBase!
  removeObtainBase(uuid: String!): ObtainBase!
  removePlayerProfile(uuid: String!): PlayerProfile!
  removeTalentBase(uuid: String!): TalentBase!
  updateAnnouncement(updateAnnouncementInput: UpdateAnnouncementInput!): Announcement!
  updateAvatarBase(updateAvatarBaseInput: UpdateAvatarBaseInput!): AvatarBase!
  updateCostomeBase(updateCostomeBaseInput: UpdateCostomeBaseInput!): CostomeBase!
  updateFrameBase(updateFrameBaseInput: UpdateFrameBaseInput!): FrameBase!
  updateObtainBase(updateObtainBaseInput: UpdateObtainBaseInput!): ObtainBase!
  updatePlayerProfile(updatePlayerProfileInput: UpdatePlayerProfileInput!): PlayerProfile!
  updateTalentBase(updateTalentBaseInput: UpdateTalentBaseInput!): TalentBase!
}

type Name {
  """Player profile name"""
  name: String!
}

type ObtainBase {
  createdAt: Date
  createdBy: String
  deletedAt: Date
  deletedBy: String
  id: ID!

  """info"""
  info: String

  """obtains_type"""
  obtains_type: String

  """tpyes_uuid"""
  types_uuid: String
  updatedAt: Date
  updatedBy: String
  uuid: String!
  version: Int
}

"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  asc
  desc
}

type PaginatedAnnouncements {
  data: [Announcement!]!
  meta: PaginationMeta!
}

type PaginatedAvatarBases {
  data: [AvatarBase!]!
  meta: PaginationMeta!
}

type PaginatedCostomeBases {
  data: [CostomeBase!]!
  meta: PaginationMeta!
}

type PaginatedFrameBases {
  data: [FrameBase!]!
  meta: PaginationMeta!
}

type PaginatedObtainBases {
  data: [ObtainBase!]!
  meta: PaginationMeta!
}

type PaginatedPlayerProfiles {
  data: [PlayerProfile!]!
  meta: PaginationMeta!
}

type PaginatedTalentBases {
  data: [TalentBase!]!
  meta: PaginationMeta!
}

type PaginationMeta {
  limit: Int!
  page: Int!
  pages: Int!
  total: Int!
}

type PlayerProfile {
  """URL to player profile avatar"""
  avatar_url: String
  createdAt: Date
  createdBy: String

  """Crystal shard currency"""
  crystalShard: Int!

  """Current mana points"""
  currentMana: Int!
  deletedAt: Date
  deletedBy: String

  """Player profile description"""
  description: String

  """Player experience points"""
  exp: Int!

  """URL to player profile frame"""
  frame_url: String
  id: ID!

  """Player level"""
  level: Int!

  """Maximum mana points"""
  maxMana: Int!

  """Player profile name"""
  name: String!
  updatedAt: Date
  updatedBy: String

  """User account UUID"""
  userAccountUuid: String
  uuid: String!
  version: Int

  """Player currency (Zeny)"""
  zeny: Int!
}

type Post {
  content: String
  createdAt: Date
  createdBy: String
  deletedAt: Date
  deletedBy: String
  id: ID!
  published: Boolean!
  title: String!
  updatedAt: Date
  updatedBy: String
  uuid: String!
  version: Int
}

type Query {
  announcement(uuid: String!): Announcement!
  announcements(limit: Int = 100, orderBy: String = "updatedAt", orderDirection: OrderDirection = desc, page: Int = 1): PaginatedAnnouncements!
  avatarBase(uuid: String!): AvatarBase!
  avatarBases(limit: Int = 100, orderBy: String = "updatedAt", orderDirection: OrderDirection = desc, page: Int = 1): PaginatedAvatarBases!
  costomeBase(uuid: String!): CostomeBase!
  costomeBaseByEquipmentId(equipmentId: String!): CostomeBase!
  costomeBases(limit: Int = 100, orderBy: String = "updatedAt", orderDirection: OrderDirection = desc, page: Int = 1): PaginatedCostomeBases!
  frameBase(uuid: String!): FrameBase!
  frameBases(limit: Int = 100, orderBy: String = "updatedAt", orderDirection: OrderDirection = desc, page: Int = 1): PaginatedFrameBases!
  hello(name: String!): String!
  helloWorld: String!
  obtainBase(uuid: String!): ObtainBase!
  obtainBases(limit: Int = 100, orderBy: String = "updatedAt", orderDirection: OrderDirection = desc, page: Int = 1): PaginatedObtainBases!
  paginatedAnnouncements(limit: Int = 100, orderBy: String = "updatedAt", orderDirection: OrderDirection = desc, page: Int = 1): PaginatedAnnouncements!
  paginatedAvatarBases(limit: Int = 100, orderBy: String = "updatedAt", orderDirection: OrderDirection = desc, page: Int = 1): PaginatedAvatarBases!
  paginatedCostomeBases(limit: Int = 100, orderBy: String = "updatedAt", orderDirection: OrderDirection = desc, page: Int = 1): PaginatedCostomeBases!
  paginatedFrameBases(limit: Int = 100, orderBy: String = "updatedAt", orderDirection: OrderDirection = desc, page: Int = 1): PaginatedFrameBases!
  paginatedObtainBases(limit: Int = 100, orderBy: String = "updatedAt", orderDirection: OrderDirection = desc, page: Int = 1): PaginatedObtainBases!
  paginatedPlayerProfiles(limit: Int = 100, orderBy: String = "updatedAt", orderDirection: OrderDirection = desc, page: Int = 1): PaginatedPlayerProfiles!
  paginatedTalentBases(limit: Int = 100, orderBy: String = "updatedAt", orderDirection: OrderDirection = desc, page: Int = 1): PaginatedTalentBases!
  playerProfile(uuid: String!): PlayerProfile!
  playerProfiles(limit: Int = 100, orderBy: String = "updatedAt", orderDirection: OrderDirection = desc, page: Int = 1): PaginatedPlayerProfiles!
  randomPlayerName: Name!
  talentBase(uuid: String!): TalentBase!
  talentBases(limit: Int = 100, orderBy: String = "updatedAt", orderDirection: OrderDirection = desc, page: Int = 1): PaginatedTalentBases!
}

type Subscription {
  postCreated: Post!
}

type TalentBase {
  createdAt: Date
  createdBy: String
  deletedAt: Date
  deletedBy: String

  """detail"""
  detail: String
  id: ID!

  """image parth (misspelled path)"""
  imageParth: String

  """is active"""
  isActive: Int!

  """level max"""
  levelMax: Int!

  """name"""
  name: String!

  """skill point"""
  skillPoint: Int!

  """stage"""
  stage: Int!

  """stat"""
  stat: String!

  """type"""
  type: String!
  updatedAt: Date
  updatedBy: String
  uuid: String!
  version: Int

  """zeny spend"""
  zenySpend: Int!
}

input UpdateAnnouncementInput {
  """URL to image avatar"""
  image: String

  """info"""
  info: String
  uuid: String!
}

input UpdateAvatarBaseInput {
  """URL to image avatar"""
  imageUrl: String

  """Obtain Base Uuid"""
  obtainsBaseUuid: String
  uuid: String!
}

input UpdateCostomeBaseInput {
  """Colors"""
  colors: String

  """Equipment ID"""
  equimentID: String

  """Equioment Type"""
  equipmentType: Int

  """Image Path"""
  imagePath: String

  """Equipment Info"""
  info: String

  """Is Active"""
  isActive: Int

  """Is Colorable"""
  isColorable: Int

  """Is Default"""
  isDefault: Int

  """Model"""
  model: Int

  """Equipment Name"""
  name: String

  """Obtain Base Uuid"""
  obtainBaseUuid: String

  """Prefab Path"""
  prefabPath: String

  """Tier"""
  tier: Int
  uuid: String!
}

input UpdateFrameBaseInput {
  """URL to image avatar"""
  imageUrl: String

  """Obtain Base Uuid"""
  obtainsBaseUuid: String
  uuid: String!
}

input UpdateObtainBaseInput {
  """info"""
  info: String

  """obtains_type"""
  obtains_type: String

  """tpyes_uuid"""
  types_uuid: String
  uuid: String!
}

input UpdatePlayerProfileInput {
  """URL to player profile avatar"""
  avatar_url: String

  """Crystal shard currency"""
  crystalShard: Int

  """Current mana points"""
  currentMana: Int

  """Player profile description"""
  description: String

  """Player experience points"""
  exp: Int

  """URL to player profile frame"""
  frame_url: String

  """Player level"""
  level: Int

  """Maximum mana points"""
  maxMana: Int

  """Player profile name"""
  name: String

  """User account UUID"""
  userAccountUuid: String
  uuid: String!

  """Player currency (Zeny)"""
  zeny: Int
}

input UpdateTalentBaseInput {
  """detail"""
  detail: String

  """image parth (misspelled path)"""
  imageParth: String

  """is active"""
  isActive: Int

  """level max"""
  levelMax: Int

  """name"""
  name: String

  """skill point"""
  skillPoint: Int

  """stage"""
  stage: Int

  """stat"""
  stat: String

  """type"""
  type: String
  uuid: String!

  """zeny spend"""
  zenySpend: Int
}